// scripts/seed.js
require('dotenv').config();
const mongoose = require('mongoose');
const User = require('../src/models/user.model');
const Event = require('../src/models/event.model');
const Registration = require('../src/models/registration.model');

async function run() {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Connected to MongoDB');

    // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤ (‡∏Å‡∏±‡∏ô duplicate)
    await Promise.all([
      Registration.deleteMany({}),
      Event.deleteMany({}),
      User.deleteMany({})
    ]);

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° Users
    const users = await User.insertMany([
      { name: 'Alice', email: 'alice@test.local', role: 'student' },
      { name: 'Bob',   email: 'bob@test.local',   role: 'student' },
      { name: 'Admin', email: 'admin@test.local', role: 'admin' }
    ]);
    console.log(`üå± Users: ${users.length}`);

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° Events
    const events = await Event.insertMany([
      {
        title: '‡∏≠‡∏ö‡∏£‡∏° React ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô',
        description: '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏î‡πâ‡∏ß‡∏¢ React',
        date: new Date('2025-10-05T09:00:00Z'),
        location: 'Lab 401',
        category: '‡∏≠‡∏ö‡∏£‡∏°'
      },
      {
        title: '‡∏à‡∏¥‡∏ï‡∏≠‡∏≤‡∏™‡∏≤ Big Cleaning',
        description: '‡∏£‡πà‡∏ß‡∏°‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        date: new Date('2025-10-10T13:00:00Z'),
        location: '‡∏ï‡∏∂‡∏Å IT',
        category: '‡∏ö‡∏≥‡πÄ‡∏û‡πá‡∏ç‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå'
      },
      {
        title: '‡∏™‡∏±‡∏°‡∏°‡∏ô‡∏≤ AI',
        description: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå AI',
        date: new Date('2025-10-20T09:30:00Z'),
        location: '‡∏´‡∏≠‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÉ‡∏´‡∏ç‡πà',
        category: '‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≤‡∏£'
      }
    ]);
    console.log(`üå± Events: ${events.length}`);

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° Registrations
    const regs = await Registration.insertMany([
      { user: users[0]._id, event: events[0]._id, status: 'registered' },
      { user: users[1]._id, event: events[0]._id, status: 'interested' },
      { user: users[1]._id, event: events[2]._id, status: 'registered' }
    ]);
    console.log(`üå± Registrations: ${regs.length}`);

    await mongoose.disconnect();
    console.log('‚úÖ Seed finished');
  } catch (err) {
    console.error('‚ùå Error seeding data:', err);
    process.exit(1);
  }
}

run();
